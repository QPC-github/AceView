NAME
openServer, closeServer, askServer, askServerBinary

SYNOPSIS

#include "aceclient.h"

ace_handle *openServer(
	char *host,
	 u_long port,
	 int timeOut);

void closeServer(
	ace_handle *handle);

int askServer(
	ace_handle *handle, 
	char *request, 
	char **answer, 
	int chunkSize);

int askServerBinary(
	ace_handle *handle, 
	char *request, 
	unsigned char **binaryAnswer,
        int  *length, 
	int chunkSize);

PARAMETERS
  handle   specifies a valid open connection
  host     server host to connect to
  timeOut  timeout period for all communication to host
  request  string to transfer to server
  answer   string returned by server
  binaryAnswer bytestring returned by server
  length   number of bytes returned by server
  chunkSize desired size (in kBytes) of returned data-block
            This is only a hint. The server can return more.
            The server splits on ace boundaries
            a chunkSize of 0 indicates a request for unbuffered answers

DESCRIPTION
  the openServer() function opens the connection to the ace-server, 
  authenticates and connects a valid handle with it, returning a pointer 
  to the ace_handle structure. If no connection can be established a NULL
  pointer will be returned.

  the closeServer() closes the connection associated with the handle.

  the askServer() and askServerBinar function transmit the request and 
  returns the answer. askServerBinary is not aware of the contents of the byte
  string. askServer will treat the returned string as a series of character
  strings, and concatenate them into one string. The checking of
  the validity of the contents is up to the calling routine.
  The answer can be a NULL string. It's up to the caller to check for this.

ERRORS
   
  if an error occurs during a call of askServer, 
  the following error conditions can be returned 
  ESUCCESS  (0)  no error.
  EIO       (5)  no response received from server.
  ENOMEM   (12)  no memory available to store answer.
  or an error generated by the ace server.

  A negative value is used to indicate an incomplete answer
  the remainder can be requested with 
  askServer(handle,"encore",&answer,chunkSize);
  or dropped with
  askServer(handle,"noencore",&answer,chunkSize);
  No new requests can be handled as long as an encore is pending.
  
  
  If an error is returned, the contents of answer are undefined.

NOTES
  Currently, the aceclientlib routines use rpc for communication to the 
  server. As this is completely invisible to the upper layer, the protocol
  can be changed without changing the client code.

  The RPC port is hardcoded in the routines. Seperate clients are identified 
  by a clientId/magic number pair, which is returned by the server during
  the authentication stage.

  The aceclientlib routines contain no ace specific code. the can be
  used to make a library, independent from Acedb.

Jeroen Coppieters: Tue May 23 01:48:46 EDT 1995
SCCS KEYS: $Id: wrpc.README,v 1.1.1.1 2002/07/19 20:23:15 sienkiew Exp $
