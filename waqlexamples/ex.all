aql -active select g from g in @active:1

select a from a in class Author where a->Address[2] = "England"

select a, a->Email from a in class Author

select all a in class Author where a->Address[2] = "England"

select all class Author where ->Address[2] = "England"

select a,b from a in class Author where a->Address[2] = "England", b in a->Paper where b->Journal = "Nature"

select a->Paper->Author from a in object("Author","Thierry-Mieg D")

select all object("Author","Durbin RM")->Paper->Author

select g, gm[Position] from g in object("Map","III")->Contains[2], gm in g->Map where gm = "III"

@AHsubseq := select x,x[1],x[2] from x in object("Sequence","AH6")->Subsequence

select all a in class Author where count(select all a->Paper) > 100

(select r[1],size:r[3]-r[2] from r in @AH6subseq where r[3]>r[2]) union (select [1],size:[2]-[3] from @AH6subseq where [2]>[3]) order by .size


select g, g->Map[Position]  from g in object("Map","III")->Contains[2]  where g->Map = "III" and exists  g->Map[Position][1]

aql select g   from g in class "Gene" where g like "unc*"
aql (select gene::g,p,year::y from g in @active:1,p in g->reference,y in p->year) order by :gene, :year desc
